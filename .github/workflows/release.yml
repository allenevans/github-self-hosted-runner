name: release
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14]

    steps:
      - uses: actions/checkout@v1

      - name: Config
        run: |
          echo "Release triggered by ${{github.actor}}"
          echo "Commit ${{github.event.commits[0].message}}"
          git config --global user.email "git-ci@techinity.com"
          git config --global user.name "gitci"

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Semantic version
        if: contains(github.event.commits[0].message, '[skip ci]') == false
        env:
          GH_TOKEN: ${{secrets.GH_TOKEN}}
        run: npm run release

      - name: Check Image Exists
        id: image
        run: docker pull allenevans/github-self-hosted-runner:$(jq -r '.version' package.json) && echo "::set-output name=exists::true" || echo "Image can be published"

      - name: Docker publish
        if: steps.image.outputs.exists != 'true'
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker tag github-self-hosted-runner allenevans/github-self-hosted-runner:$(jq -r ".version" package.json)
          docker tag github-self-hosted-runner allenevans/github-self-hosted-runner:latest
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker push allenevans/github-self-hosted-runner:$(jq -r ".version" package.json)
          docker push allenevans/github-self-hosted-runner:latest
